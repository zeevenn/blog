import{_ as s,c as a,e as t,o as e}from"./app-DjQQUbip.js";const p={};function o(c,n){return e(),a("div",null,[...n[0]||(n[0]=[t(`<p><code>useTransition</code> 可以让你给你一个 <code>pending</code> 的布尔值，让你可以展示 <code>pending</code> 状态。但这个问题的难点在于，如果你想展示触发 transition 的值。例如，如果你使用 state 控制一个搜索框，你希望 <code>&lt;input /&gt;</code> 的 <code>value</code> 与用户输入的值保持一致，而不是与之前的值保持一致，因为 React 正在等待 transition 完成。</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Suspense<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> useTransition <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> SearchResults <span class="token keyword">from</span> <span class="token string">&#39;./SearchResults.js&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>query<span class="token punctuation">,</span> setQuery<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isPending<span class="token punctuation">,</span> startTransition<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        Search albums:
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">startTransition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token function">setQuery</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Suspense</span></span> <span class="token attr-name">fallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchResults</span></span> <span class="token attr-name">query</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Suspense</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，input 的 value 不会实时更新，因为 React 正在等待 transition 完成。</p><p><code>useDeferredValue</code> 可以让你把一个值「延迟处理」。</p><ul><li>组件里仍然会立刻拿到最新的输入值，所以 <code>&lt;input /&gt;</code> 不会卡顿。</li><li>但你把这个值传给 <code>useDeferredValue</code>，得到一个「延迟版的值」，再用它去触发昂贵的渲染（比如搜索结果）。</li></ul><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Suspense<span class="token punctuation">,</span> useState<span class="token punctuation">,</span> useDeferredValue <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> SearchResults <span class="token keyword">from</span> <span class="token string">&#39;./SearchResults.js&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>query<span class="token punctuation">,</span> setQuery<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> deferredQuery <span class="token operator">=</span> <span class="token function">useDeferredValue</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isStale <span class="token operator">=</span> query <span class="token operator">!==</span> deferredQuery<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        Search albums:
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=&gt;</span> <span class="token function">setQuery</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Suspense</span></span> <span class="token attr-name">fallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          opacity<span class="token operator">:</span> isStale <span class="token operator">?</span> <span class="token number">0.5</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          transition<span class="token operator">:</span> isStale <span class="token operator">?</span> <span class="token string">&#39;opacity 0.2s 0.2s linear&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;opacity 0s 0s linear&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchResults</span></span> <span class="token attr-name">query</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>deferredQuery<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Suspense</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useDeferredValue</code> 会让 React 渲染两次。第一次把 <code>deferredValue</code> 设置为之前的 <code>value</code>，第二次把 <code>deferredValue</code> 设置为当前的 <code>value</code>。这允许 React 处理挂起的组件，并且你可以根据 <code>deferredValue</code> 和 <code>value</code> 的差异来决定是否显示 stale UI。</p><p>这可能感觉与 <code>useTransition</code> 非常相似。两者都允许你处理挂起的组件的 pending UI。<code>useDeferredValue</code> 通常用于典型的用户交互，而 <code>useTransition</code> 通常用于用户导航或刷新整个 UI。</p><table><thead><tr><th>特性</th><th><code>useTransition</code></th><th><code>useDeferredValue</code></th></tr></thead><tbody><tr><td>主要作用</td><td>将状态更新标记为「非紧急」，允许 React 延迟渲染耗时组件</td><td>将一个值延迟处理，让依赖这个值的组件慢一点更新</td></tr><tr><td>返回值</td><td><code>[startTransition, isPending]</code></td><td><code>deferredValue</code></td></tr><tr><td>触发方式</td><td>手动包裹状态更新：<code>startTransition(() =&gt; setState(...))</code></td><td>直接传入值：<code>const deferredValue = useDeferredValue(value)</code></td></tr><tr><td>UI 表现</td><td>旧状态会被保留，提供 <code>isPending</code> 显示加载状态</td><td>当前值立即可用（input 仍实时更新），延迟值用于耗时渲染</td></tr><tr><td>使用场景</td><td>当一次状态更新会触发大量耗时渲染，想让 UI 先响应紧急操作</td><td>当某个值可能导致昂贵渲染，但你希望主 UI 保持流畅</td></tr></tbody></table>`,9)])])}const i=s(p,[["render",o],["__file","13-useDeferredValue.html.vue"]]),u=JSON.parse('{"path":"/frontend/framework/react/13-useDeferredValue.html","title":"useDeferredValue","lang":"zh-CN","frontmatter":{"title":"useDeferredValue","tag":["react","hooks"],"description":"useTransition 可以让你给你一个 pending 的布尔值，让你可以展示 pending 状态。但这个问题的难点在于，如果你想展示触发 transition 的值。例如，如果你使用 state 控制一个搜索框，你希望 <input /> 的 value 与用户输入的值保持一致，而不是与之前的值保持一致，因为 React 正在等待 trans...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/framework/react/13-useDeferredValue.html"}],["meta",{"property":"og:title","content":"useDeferredValue"}],["meta",{"property":"og:description","content":"useTransition 可以让你给你一个 pending 的布尔值，让你可以展示 pending 状态。但这个问题的难点在于，如果你想展示触发 transition 的值。例如，如果你使用 state 控制一个搜索框，你希望 <input /> 的 value 与用户输入的值保持一致，而不是与之前的值保持一致，因为 React 正在等待 trans..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-05T08:28:46.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"hooks"}],["meta",{"property":"article:modified_time","content":"2025-09-05T08:28:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"useDeferredValue\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-05T08:28:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[],"git":{"createdTime":1757060926000,"updatedTime":1757060926000,"contributors":[{"name":"Ziven","email":"contact@ziven.me","commits":1}]},"readingTime":{"minutes":2.03,"words":608},"filePathRelative":"frontend/framework/react/13-useDeferredValue.md","localizedDate":"2025年9月5日","excerpt":"","autoDesc":true}');export{i as comp,u as data};
